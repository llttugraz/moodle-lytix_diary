{"version":3,"file":"diary.min.js","sources":["../src/diary.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {loadFragment} from 'core/fragment';\nimport Templates from 'core/templates';\nimport Yui from 'core/yui';\nimport {getStrings} from 'lytix_helper/widget';\nimport {makeLoggingFunction} from 'lytix_logs/logs';\n\nconst moment = window.moment;\n\nlet log; // This will be the logging function.\n\nvar diary = {\n\n    contextid: -1,\n    courseid: -1,\n    userid: -1,\n    strings: null,\n    semStart: null,\n    semEnd: null,\n\n    drawLoading: function() {\n        var imgtype;\n        if (Number(M.cfg.version) < 2024042200) {\n            imgtype = \"gif\";\n        } else {\n            imgtype = \"svg\";\n        }\n        const img = '<img src=\"../../../pix/i/loading.' + imgtype + '\" ' +\n            'alt=\"LoadingImage\" style=\"width:48px;height:48px;\">';\n        var widget = document.getElementById('lytix_diary');\n        widget.innerHTML = img + ' ' + diary.strings.loading_msg;\n    },\n    drawdiary: function() {\n        var promises = Ajax.call([\n            {\n                methodname: 'local_lytix_lytix_diary_get',\n                args: {\n                    contextid: diary.contextid, courseid: diary.courseid, userid: diary.userid},\n            }\n        ]);\n        promises[0].done(function(response) {\n            diary.semStart = moment.unix(response.semStart);\n            diary.semEnd = moment.unix(response.semEnd);\n            return Templates.render('lytix_diary/diary_table', response)\n            .then(html => {\n                $('#lytix_diary').html(html);\n                return;\n            })\n            .fail(function(ex) {\n                diary.renderTableFail(ex);\n            });\n        });\n    },\n\n    setAddListener: function() {\n        // Set click listener to add button.\n        $(\"#page\").on('click', '#add_diary_entry', function() {\n            log('OPEN', 'DIARY');\n            diary.createDiaryEntryModal({id: -1, userid: diary.userid, courseid: diary.courseid});\n        });\n    },\n\n    setEditListener: function() {\n        // Set click listener to every row.\n        $(\"#page\").on('click', '.editdiaryentry', function() {\n            var id = $(this).attr('id');\n            log('OPEN', 'DIARY', null, id);\n            var promises = Ajax.call([\n                {\n                    methodname: 'local_lytix_lytix_diary_entry_get',\n                    args: {\n                        contextid: diary.contextid, courseid: diary.courseid, userid: diary.userid, id: id\n                    },\n                }\n            ]);\n            promises[0].done(function(response) {\n                if (response.entry !== null) {\n                    diary.createDiaryEntryModal(response.entry);\n                }\n            });\n        });\n    },\n\n    setDeleteListener: function() {\n        // Set click listener to every row.\n        $(\"#page\").on('click', '.removediaryentry', function() {\n            var id = $(this).attr('id');\n            diary.deleteDiaryEntry(id);\n        });\n    },\n\n    renderTableFail: function(ex) {\n        var text = diary.strings.error_text + '<p>' + ex.message + '</p>';\n        $('#lytix_diary').html(text);\n    },\n\n    renderModalFail: function(ex, id) {\n        var text = diary.strings.error_text + '<p>' + ex.message + '</p>';\n        $('#' + id + '.modal-body').html(text);\n    },\n\n    createDiaryEntryModal: function(item) {\n        var trigger = $('#create-modal');\n        var form = loadFragment('lytix_diary', 'new_diary_entry_form', diary.contextid, item);\n        var title = diary.strings.diary_entry;\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: form,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.setLarge();\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function(m) {\n                // Convert all the form elements values to a serialised string.\n                var formData = root.find('form').serialize();\n                // Check for mandatory values.\n                if (document.getElementById('id_title').value === \"\") {\n                    m.preventDefault();\n                } else {\n                    let diaryDate = new Date(document.getElementById('id_startdate_year').value,\n                        document.getElementById('id_startdate_month').value - 1,\n                        document.getElementById('id_startdate_day').value);\n                    var timestampofentry = diaryDate.getTime();\n                    if (timestampofentry < diary.semStart || timestampofentry > diary.semEnd) {\n                        m.preventDefault();\n                        modal.setBody(modal.getBody().innerHTML);\n                        modal.getBody().append(diary.strings.date_out_of_range);\n                    } else {\n                        var mandatoryFlag = true;\n                        var starthour = parseInt(document.getElementById('id_startdate_hour').value);\n                        var endhour = parseInt(document.getElementById('id_hour').value);\n                        var endminute = parseInt(document.getElementById('id_minute').value);\n                        var startminute = parseInt(document.getElementById('id_startdate_minute').value);\n                        if ((endhour < starthour) || (starthour === endhour && endminute < startminute)) {\n                            mandatoryFlag = false;\n                            m.preventDefault();\n                            modal.setBody(modal.getBody().innerHTML);\n                            modal.getBody().append(diary.strings.time_smaller);\n                        }\n                        if (mandatoryFlag) {\n                            // Call the webservice with formData as param.\n                            var promises = Ajax.call([\n                                {\n                                    methodname: 'local_lytix_lytix_diary_entry',\n                                    args: {contextid: diary.contextid, jsonformdata: JSON.stringify(formData)},\n                                }\n                            ]);\n                            promises[0].done(function() {\n                                diary.resetModal();\n                                diary.drawdiary();\n                            }).fail(function(ex) {\n                                // TODO Find solution to show error message in modal.\n                                window.console.log(ex);\n                                diary.resetModal();\n                            });\n                        }\n                    }\n                }\n            });\n            root.on(ModalEvents.hidden, function() {\n                log('CLOSE', 'DIARY', null, item.id);\n                modal.hide();\n                modal.destroy();\n            });\n            root.on(ModalEvents.cancel, function() {\n                diary.resetModal();\n            });\n        });\n    },\n\n    deleteDiaryEntry: function(id) {\n        var trigger = $('#create-modal');\n        var title = diary.strings.diary;\n        var body = Templates.render('lytix_diary/delete_entry', {});\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: body,\n        }, trigger).done(function(modal) {\n            // Forms are big, we want a big modal.\n            modal.show();\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                // Convert all the form elements values to a serialised string.\n                var promises = Ajax.call([\n                    {\n                        methodname: 'local_lytix_lytix_diary_delete_entry',\n                        args: {\n                            contextid: diary.contextid, courseid: diary.courseid,\n                            userid: diary.userid, id: id,\n                        },\n                    },\n                ]);\n                promises[0].done(function(response) {\n                    if (response.success) {\n                        diary.drawdiary();\n                        diary.resetModal();\n                    }\n                }).fail(function(ex) {\n                    diary.renderModalFail(ex, modal.body[0].id);\n                    modal.show();\n                });\n            });\n            root.on(ModalEvents.cancel, function() {\n                diary.resetModal();\n            });\n        });\n    },\n\n    resetModal: function() {\n        Yui.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        // Reload that changes in table are done too.\n        // document.location.reload();\n    },\n};\n\nexport const init = async (contextid, courseid, userid) => { // eslint-disable-line space-before-function-paren\n    diary.contextid = contextid;\n    diary.courseid = courseid;\n    diary.userid = userid;\n    diary.strings = await getStrings({\n        lytix_diary: { // eslint-disable-line camelcase\n            identical: [\n                \"error_text\",\n                \"diary_entry\",\n                \"diary\",\n                \"loading_msg\",\n                \"title_required\",\n                \"date_out_of_range\",\n                \"time_smaller\",\n            ],\n        },\n    });\n\n    log = makeLoggingFunction(userid, courseid, contextid, 'diary');\n\n    diary.drawLoading();\n    diary.drawdiary();\n    diary.setEditListener();\n    diary.setDeleteListener();\n    diary.setAddListener();\n};\n"],"names":["moment","window","log","diary","contextid","courseid","userid","strings","semStart","semEnd","drawLoading","img","Number","M","cfg","version","document","getElementById","innerHTML","loading_msg","drawdiary","Ajax","call","methodname","args","done","response","unix","Templates","render","then","html","fail","ex","renderTableFail","setAddListener","on","createDiaryEntryModal","id","setEditListener","this","attr","entry","setDeleteListener","deleteDiaryEntry","text","error_text","message","renderModalFail","item","trigger","form","title","diary_entry","create","type","ModalFactory","types","SAVE_CANCEL","body","modal","setLarge","show","root","getRoot","ModalEvents","save","m","formData","find","serialize","value","preventDefault","timestampofentry","Date","getTime","setBody","getBody","append","date_out_of_range","mandatoryFlag","starthour","parseInt","endhour","endminute","startminute","time_smaller","jsonformdata","JSON","stringify","resetModal","console","hidden","hide","destroy","cancel","success","use","core_formchangechecker","reset_form_dirty_state","async","lytix_diary","identical"],"mappings":"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"}